{"version":3,"sources":["components/TableRowCell/TableRowCell.module.css","components/TableRow/TableRow.module.css","components/TableHead/TableHead.module.css","components/ToggleLink/ToggleLink.module.css","pages/PageExchangeQuotes/layout/PageExchangeQuotesLayout.module.css","themes/themes.module.css","models/models.ts","utils/utils.tsx","components/TableRowCell/TableRowCell.tsx","components/TableRowCellSimple/TableRowCellSimple.tsx","components/TableRow/TableRow.tsx","components/TableHead/TableHead.tsx","components/Table/Table.tsx","components/ToggleLink/ToggleLink.tsx","pages/PageExchangeQuotes/layout/PageExchangeQuotesLayout.tsx","services/service-websocket.ts","pages/PageExchangeQuotes/hooks/useProps.tsx","hooks/use-body-class/useBodyClass.tsx","pages/PageExchangeQuotes/PageExchangeQuotes.tsx","App.tsx","index.tsx"],"names":["module","exports","SortTypeEnum","SortOrderEnum","formatValue","value","formatter","formatNumber","Number","toFixed","useIsVisible","require","TableRowCell","id","groupId","allowComparing","nodeRef","useRef","isVisible","prevValue","useEffect","current","isMore","className","styles","more","less","setTimeout","ref","React","memo","TableRowCellSimple","TableRow","rowData","root","ticker","bid","ask","high","low","last","TableHead","sortType","sortOrder","onSort","buildClassName","currentType","cn","ASC","DESC","buildClassNameHOF","handleClick","currentSortType","onClick","TICKER","BID","ASK","HIGH","LOW","LAST","Table","data","cellPadding","cellSpacing","_","ToggleLink","showPrimary","onToggle","primaryText","secondText","PageExchangeQuotesLayout","loading","showAllToggle","table","themeToggle","webSocketsStats","wrapper","header","loaderRoot","loaderMsg","ServiceWebsocket","url","requestId","requestResolvers","socket","currenciesStore","callbacks","symbolsCallbacks","onLoadSymbols","fn","push","offLoadSymbols","idx","indexOf","splice","onChange","offChange","handleOpen","a","getSymbols","symbols","forEach","callback","result","currencies","subscribeTicker","catch","e","console","warn","handleMessage","msg","JSON","parse","method","response","params","symbol","makeRequest","send","stringify","Promise","resolve","this","WebSocket","addEventListener","startTime","Date","now","useProps","limit","useState","theme","themes","lightTheme","loadingCurrencyList","undefined","state","setState","tmp","requestRef","previousTimeRef","webSocketsEventsCntRef","animate","useCallback","time","prev","Math","round","requestAnimationFrame","cancelAnimationFrame","handleChangeTicker","baseCurrency","feeCurrency","parseFloat","transform","handleLoadSymbols","serviceWebsocket","filteredData","useMemo","map","sortBy","obj","reverse","slice","thru","arr","handleSort","handleLimitToggle","isLightTheme","handleThemeToggle","darkTheme","onLimitToggle","onThemeToggle","useBodyClass","document","body","classList","add","remove","PageExchangeQuotes","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbaf27bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"more\":\"TableRowCell_more__m1jO0\",\"less\":\"TableRowCell_less__3EWMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableRow_root__38SN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableHead_root__fMwGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToggleLink_root__3P_3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageExchangeQuotesLayout_root__3yjHe\",\"wrapper\":\"PageExchangeQuotesLayout_wrapper__q5U5K\",\"header\":\"PageExchangeQuotesLayout_header__2Sd9s\",\"loaderRoot\":\"PageExchangeQuotesLayout_loaderRoot__2eDKQ\",\"loaderMsg\":\"PageExchangeQuotesLayout_loaderMsg__aQ0bQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightTheme\":\"themes_lightTheme__3p73V\",\"darkTheme\":\"themes_darkTheme__3K45N\"};","type FloatAsString = string;\ntype IntAsString = string;\ntype ISO = string;\n\nexport interface Currencies {\n  baseCurrency: string;\n  feeCurrency: string;\n  id: string;\n  provideLiquidityRate: FloatAsString;\n  quantityIncrement: IntAsString;\n  quoteCurrency: string;\n  takeLiquidityRate: FloatAsString;\n  tickSize: FloatAsString;\n}\n\nexport interface GetSymbolsResponse {\n  id: number;\n  jsonrpc: string;\n  result: Array<Currencies>;\n}\n\nexport interface SuccessfulSubscribingResponse {\n  id: number;\n  jsonrpc: string;\n  result: boolean;\n}\n\nexport interface Ticker {\n  ask: FloatAsString;\n  bid: FloatAsString;\n  high: FloatAsString;\n  last: FloatAsString;\n  low: FloatAsString;\n  open: FloatAsString;\n  symbol: string;\n  timestamp: ISO;\n  volume: FloatAsString;\n  volumeQuote: FloatAsString;\n}\n\nexport interface ReceivedNotification<T> {\n  jsonrpc: string;\n  method: string;\n  params: T;\n}\n\nexport interface TableRowData {\n  id: string;\n  ticker: string;\n  bid: number;\n  ask: number;\n  high: number;\n  low: number;\n  last: number;\n}\n\nexport enum SortTypeEnum {\n  TICKER = 'id',\n  BID = 'bid',\n  ASK = 'ask',\n  HIGH = 'high',\n  LOW = 'low',\n  LAST = 'last',\n}\n\nexport enum SortOrderEnum {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n","import { Currencies, TableRowData, Ticker } from '../models/models';\nimport formatNumber from 'format-number';\n\nexport const transform = (currencies: Currencies, data: Ticker): TableRowData => {\n  return {\n    id: currencies.id,\n    ticker: `${currencies.baseCurrency} / ${currencies.feeCurrency}`,\n    bid: parseFloat(data.bid),\n    ask: parseFloat(data.ask),\n    high: parseFloat(data.high),\n    last: parseFloat(data.last),\n    low: parseFloat(data.low),\n  };\n};\n\nexport const debug = (...args: string[]) => {\n  console.log.apply(console, args);\n};\n\nexport const formatValue = (value: string | number | null): string => {\n  if (!value) return '—';\n  if (typeof value === 'string') return value;\n\n  const formatter = formatNumber(/*{ integerSeparator: ' ', decimalsSeparator: ' ' }*/);\n\n  if (value > 0.000001) return formatter(value);\n  return Number(value).toFixed(10);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { formatValue } from '../../utils/utils';\nimport styles from './TableRowCell.module.css';\n\n// todo ugly ugly because typescript warning\nconst { useIsVisible } = require('react-is-visible');\n\ninterface TableRowProps {\n  id: string;\n  groupId: string;\n  value: string | number;\n  allowComparing?: boolean;\n}\n\nconst TableRowCell: React.FC<TableRowProps> = ({ value, id, groupId, allowComparing = false }) => {\n  const nodeRef = useRef<HTMLTableCellElement>(null);\n  const isVisible = useIsVisible(nodeRef);\n  const prevValue = useRef<string | number>();\n\n  useEffect(() => {\n    if (!allowComparing) return;\n    if (prevValue.current === value) return;\n    if (!isVisible) {\n      prevValue.current = value;\n      return;\n    }\n    if (prevValue.current && nodeRef.current) {\n      const isMore = prevValue.current < value;\n      nodeRef.current.className = isMore ? styles.more : styles.less;\n    }\n    setTimeout(() => {\n      if (nodeRef.current) nodeRef.current.className = '';\n    }, 100);\n    prevValue.current = value;\n  }, [nodeRef, allowComparing, id, groupId, value, isVisible]);\n\n  return <td ref={nodeRef}>{formatValue(value)}</td>;\n};\n\nexport default React.memo(TableRowCell);\n","import React from 'react';\n\ninterface TableRowProps {\n  value: string;\n}\n\nconst TableRowCellSimple: React.FC<TableRowProps> = ({ value }) => {\n  return <td>{value}</td>;\n};\n\nexport default React.memo(TableRowCellSimple);\n","import React from 'react';\nimport { TableRowData } from '../../models/models';\nimport TableRowCell from '../TableRowCell/TableRowCell';\nimport TableRowCellSimple from '../TableRowCellSimple/TableRowCellSimple';\nimport styles from './TableRow.module.css';\n\ninterface TableRowProps {\n  rowData: TableRowData;\n}\n\nconst TableRow: React.FC<TableRowProps> = ({ rowData }) => {\n  return (\n    <tr className={styles.root}>\n      <TableRowCellSimple value={rowData.ticker} />\n      <TableRowCell value={rowData.bid} id=\"bid\" groupId={rowData.id} allowComparing />\n      <TableRowCell value={rowData.ask} id=\"ask\" groupId={rowData.id} allowComparing />\n      <TableRowCell value={rowData.high} id=\"high\" groupId={rowData.id} allowComparing />\n      <TableRowCell value={rowData.low} id=\"low\" groupId={rowData.id} allowComparing />\n      <TableRowCell value={rowData.last} id=\"last\" groupId={rowData.id} allowComparing />\n    </tr>\n  );\n};\n\nexport default React.memo(TableRow);\n","import React from 'react';\nimport styles from './TableHead.module.css';\nimport cn from 'classnames';\nimport { SortOrderEnum, SortTypeEnum } from '../../models/models';\n\ninterface TableHeadProps {\n  sortType: SortTypeEnum;\n  sortOrder: SortOrderEnum;\n  onSort: (type: SortTypeEnum, order: SortOrderEnum) => void;\n}\n\nconst buildClassNameHOF = (sortType: SortTypeEnum, sortOrder: SortOrderEnum) => (currentType: SortTypeEnum) => {\n  if (currentType !== sortType) return;\n  return cn({\n    'fas fa-sort-amount-up': sortOrder === SortOrderEnum.ASC,\n    'fas fa-sort-amount-down': sortOrder === SortOrderEnum.DESC,\n  });\n};\n\nconst TableHead: React.FC<TableHeadProps> = ({ sortType, sortOrder, onSort }) => {\n  const buildClassName = buildClassNameHOF(sortType, sortOrder);\n\n  const handleClick = (currentSortType: SortTypeEnum) => () =>\n    onSort(\n      currentSortType,\n      currentSortType !== sortType\n        ? SortOrderEnum.DESC\n        : sortOrder === SortOrderEnum.DESC\n        ? SortOrderEnum.ASC\n        : SortOrderEnum.DESC,\n    );\n\n  return (\n    <thead>\n      <tr className={styles.root}>\n        <th onClick={handleClick(SortTypeEnum.TICKER)}>\n          Ticker <span className={buildClassName(SortTypeEnum.TICKER)} />\n        </th>\n        <th onClick={handleClick(SortTypeEnum.BID)}>\n          Bid <span className={buildClassName(SortTypeEnum.BID)} />\n        </th>\n        <th onClick={handleClick(SortTypeEnum.ASK)}>\n          Ask <span className={buildClassName(SortTypeEnum.ASK)} />\n        </th>\n        <th onClick={handleClick(SortTypeEnum.HIGH)}>\n          High <span className={buildClassName(SortTypeEnum.HIGH)} />\n        </th>\n        <th onClick={handleClick(SortTypeEnum.LOW)}>\n          Low <span className={buildClassName(SortTypeEnum.LOW)} />\n        </th>\n        <th onClick={handleClick(SortTypeEnum.LAST)}>\n          Last <span className={buildClassName(SortTypeEnum.LAST)} />\n        </th>\n      </tr>\n    </thead>\n  );\n};\n\nexport default React.memo(TableHead);\n","import React from 'react';\nimport * as _ from 'lodash';\nimport { SortOrderEnum, SortTypeEnum, TableRowData } from '../../models/models';\nimport TableRow from '../TableRow/TableRow';\nimport TableHead from '../TableHead/TableHead';\n\nexport interface TablePropsData {\n  [key: string]: TableRowData;\n}\n\ninterface TableProps {\n  data: Array<TableRowData>;\n  sortType: SortTypeEnum;\n  sortOrder: SortOrderEnum;\n  onSort: (type: SortTypeEnum, order: SortOrderEnum) => void;\n}\n\nconst Table: React.FC<TableProps> = ({ data = {}, onSort, sortType, sortOrder }) => {\n  return (\n    <table cellPadding=\"0\" cellSpacing=\"0\">\n      <TableHead onSort={onSort} sortOrder={sortOrder} sortType={sortType} />\n      <tbody>\n        {_.map(data, (rowData: TableRowData, id) => (\n          <TableRow key={rowData.id} rowData={rowData} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default React.memo(Table);\n","import React from 'react';\nimport styles from './ToggleLink.module.css';\n\ninterface ToggleLinkProps {\n  showPrimary: boolean;\n  primaryText: string;\n  secondText: string;\n  onToggle: () => void;\n}\n\nconst ToggleLink: React.FC<ToggleLinkProps> = ({ showPrimary, onToggle, primaryText, secondText }) => {\n  return (\n    <span onClick={onToggle} className={styles.root}>\n      {showPrimary ? primaryText : secondText}\n    </span>\n  );\n};\n\nexport default React.memo(ToggleLink);\n","import React from 'react';\nimport styles from './PageExchangeQuotesLayout.module.css';\n\ninterface PageExchangeQuotesLayoutProps {\n  loading?: boolean;\n  showAllToggle: React.ReactElement;\n  table: React.ReactElement;\n  themeToggle: React.ReactElement;\n  webSocketsStats: React.ReactElement;\n}\n\nconst PageExchangeQuotesLayout: React.FC<PageExchangeQuotesLayoutProps> = ({\n  loading,\n  showAllToggle,\n  table,\n  themeToggle,\n  webSocketsStats,\n}) => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <h1>Realtime Crypto Trading</h1>\n        {loading === false ? (\n          <>\n            <div className={styles.header}>\n              {showAllToggle}\n              {webSocketsStats}\n              {themeToggle}\n            </div>\n            {table}\n          </>\n        ) : (\n          <div className={styles.loaderRoot}>\n            <span className=\"fas fa-spinner fa-spin\" />\n            <div className={styles.loaderMsg}>Loading trade data ...</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PageExchangeQuotesLayout);\n","import {\n  Currencies,\n  GetSymbolsResponse,\n  ReceivedNotification,\n  SuccessfulSubscribingResponse,\n  Ticker,\n} from '../models/models';\n\ninterface RequestResolversStore {\n  // todo ugly ugly any\n  [key: number]: (value: any) => void;\n}\n\ninterface CurrenciesStore {\n  [key: string]: Currencies;\n}\n\ntype Callback = (currencies: Currencies, data: Ticker) => void;\ntype SymbolsCallback = () => void;\n\nexport class ServiceWebsocket {\n  private requestId: number = 0;\n  private requestResolvers: RequestResolversStore = {};\n  private socket: WebSocket;\n  private currenciesStore: CurrenciesStore = {};\n  private callbacks: Array<Callback> = [];\n  private symbolsCallbacks: Array<SymbolsCallback> = [];\n\n  constructor(url: string) {\n    this.socket = new WebSocket(url);\n\n    this.socket.addEventListener('open', this.handleOpen);\n    this.socket.addEventListener('message', this.handleMessage);\n  }\n\n  onLoadSymbols = (fn: SymbolsCallback) => {\n    this.symbolsCallbacks.push(fn);\n  };\n\n  offLoadSymbols = (fn: SymbolsCallback) => {\n    const idx = this.symbolsCallbacks.indexOf(fn);\n    if (idx !== -1) this.symbolsCallbacks.splice(idx, 1);\n  };\n\n  onChange = (fn: Callback) => {\n    this.callbacks.push(fn);\n  };\n\n  offChange = (fn: Callback) => {\n    const idx = this.callbacks.indexOf(fn);\n    if (idx !== -1) this.callbacks.splice(idx, 1);\n  };\n\n  private handleOpen = async () => {\n    const symbols = await this.getSymbols();\n    this.symbolsCallbacks.forEach(callback => callback());\n    symbols.result.forEach((currencies, idx) => {\n      this.currenciesStore[currencies.id] = currencies;\n      this.subscribeTicker(currencies.id).catch(e => {\n        console.warn('No able to make subscription for ' + currencies.id + '. Error: ' + e);\n      });\n    });\n  };\n\n  private handleMessage = (msg: MessageEvent) => {\n    const data = JSON.parse(msg.data);\n    if ('id' in data) {\n      return this.requestResolvers[data.id] && this.requestResolvers[data.id](data);\n    }\n    if ('ticker' === data.method) {\n      const response = data as ReceivedNotification<Ticker>;\n      const currencies = this.currenciesStore[response.params.symbol];\n      this.callbacks.forEach(callback => callback(currencies, response.params));\n    }\n  };\n\n  private getSymbols = (): Promise<GetSymbolsResponse> => this.makeRequest<GetSymbolsResponse>('getSymbols', {});\n\n  private subscribeTicker = (symbol: string): Promise<SuccessfulSubscribingResponse> =>\n    this.makeRequest<SuccessfulSubscribingResponse>('subscribeTicker', { symbol });\n\n  private makeRequest = <T>(method: string, params: {}) => {\n    const id = ++this.requestId;\n    this.socket.send(JSON.stringify({ method, params, id }));\n    return new Promise<T>(resolve => {\n      this.requestResolvers[id] = resolve;\n    });\n  };\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as _ from 'lodash';\nimport { ServiceWebsocket } from '../../../services/service-websocket';\nimport { TablePropsData } from '../../../components/Table/Table';\nimport { Currencies, SortOrderEnum, SortTypeEnum, TableRowData, Ticker } from '../../../models/models';\nimport { transform } from '../../../utils/utils';\nimport themes from '../../../themes/themes.module.css';\n\ninterface State {\n  loadingCurrencyList?: boolean;\n  webSocketsStats: number;\n  data: TablePropsData;\n  sortType: SortTypeEnum;\n  sortOrder: SortOrderEnum;\n  limit?: number;\n  theme: string;\n}\n\ninterface UsePropsReturn extends State {\n  filteredData: Array<TableRowData>;\n  isLightTheme: boolean;\n  onSort: (sortType: SortTypeEnum, sortOrder: SortOrderEnum) => void;\n  onLimitToggle: () => void;\n  onThemeToggle: () => void;\n}\n\nconst startTime = Date.now();\n\n/**\n * All business logic is encapsulated inside of this hook\n * It recalculate and returns props and callbacks for views\n * It also can be covered by test ;-)\n */\nconst useProps = (limit?: number): UsePropsReturn => {\n  const [state, setState] = useState<State>({\n    data: {},\n    webSocketsStats: 0,\n    sortType: SortTypeEnum.BID,\n    sortOrder: SortOrderEnum.DESC,\n    limit,\n    theme: themes.lightTheme,\n    loadingCurrencyList: undefined,\n  });\n\n  /**\n   * Animation stuff to minimize re-rendering\n   */\n  const tmp = useRef<TablePropsData>({});\n  const requestRef = React.useRef<number>(0);\n  const previousTimeRef = React.useRef<number>(0);\n  const webSocketsEventsCntRef = React.useRef<number>(0);\n\n  const animate = useCallback((time: number) => {\n    const deltaTime = time - previousTimeRef.current;\n    /**\n     * Will be re-rendered every 200 ms\n     */\n    if (deltaTime > 200) {\n      setState(prev => {\n        const webSocketsStats = Math.round((webSocketsEventsCntRef.current / (Date.now() - startTime)) * 1000);\n\n        return {\n          ...prev,\n          webSocketsStats,\n          data: { ...prev.data, ...tmp.current },\n        };\n      });\n      previousTimeRef.current = time;\n    }\n    requestRef.current = requestAnimationFrame(animate);\n  }, []);\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [animate]);\n\n  /**\n   * Websocket initializing stuff\n   * and storing new data into the \"tmp ref\"\n   * to avoid extra re-rendering\n   */\n  const handleChangeTicker = useCallback((currencies: Currencies, data: Ticker) => {\n    const rowData = transform(currencies, data);\n    tmp.current[rowData.id] = rowData;\n    webSocketsEventsCntRef.current++;\n  }, []);\n\n  const handleLoadSymbols = useCallback(() => {\n    setState(prev => ({ ...prev, loadingCurrencyList: false }));\n  }, []);\n\n  useEffect(() => {\n    setState(prev => ({ ...prev, loadingCurrencyList: true }));\n    const serviceWebsocket = new ServiceWebsocket('wss://api.exchange.bitcoin.com/api/2/ws');\n    serviceWebsocket.onChange(handleChangeTicker);\n    serviceWebsocket.onLoadSymbols(handleLoadSymbols);\n\n    return () => {\n      serviceWebsocket.offChange(handleChangeTicker);\n      serviceWebsocket.offLoadSymbols(handleLoadSymbols);\n    };\n  }, [handleChangeTicker, handleLoadSymbols]);\n\n  /**\n   * Preparing data for table:\n   * implemented sorting and ordering\n   */\n  const filteredData = useMemo(\n    () =>\n      _.chain<TablePropsData>(state.data)\n        .map()\n        .sortBy(obj => obj.last)\n        .reverse()\n        .slice(0, state.limit)\n        .sortBy(obj => (obj[state.sortType] ? obj[state.sortType] : 0))\n        .thru(arr => {\n          if (state.sortOrder === SortOrderEnum.DESC) arr.reverse();\n          return arr;\n        })\n        .value(),\n    [state],\n  );\n\n  /**\n   * Sorting and ordering stuff\n   */\n  const handleSort = useCallback(\n    (sortType: SortTypeEnum, sortOrder: SortOrderEnum) =>\n      setState(prev => ({\n        ...prev,\n        sortType,\n        sortOrder,\n      })),\n    [],\n  );\n\n  /**\n   * Limit changing stuff\n   */\n  const handleLimitToggle = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      limit: prev.limit ? undefined : limit,\n    }));\n  }, [limit]);\n\n  /**\n   * Theming stuff\n   */\n  const isLightTheme = state.theme === themes.lightTheme;\n\n  const handleThemeToggle = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      theme: isLightTheme ? themes.darkTheme : themes.lightTheme,\n    }));\n  }, [isLightTheme]);\n\n  /**\n   * Prepared props for views\n   */\n  return {\n    filteredData,\n    ...state,\n    isLightTheme,\n    onSort: handleSort,\n    onLimitToggle: handleLimitToggle,\n    onThemeToggle: handleThemeToggle,\n  };\n};\n\nexport default useProps;\n","import { useEffect } from 'react';\n\nconst useBodyClass = (className: string) => {\n  useEffect(() => {\n    document.body.classList.add(className);\n\n    return () => {\n      document.body.classList.remove(className);\n    };\n  }, [className]);\n};\n\nexport default useBodyClass;\n","import React from 'react';\nimport Table from '../../components/Table/Table';\nimport ToggleLink from '../../components/ToggleLink/ToggleLink';\nimport PageExchangeQuotesLayout from './layout/PageExchangeQuotesLayout';\nimport useProps from './hooks/useProps';\nimport useBodyClass from '../../hooks/use-body-class/useBodyClass';\n\nconst LIMIT = 25;\n\nfunction PageExchangeQuotes() {\n  const { loadingCurrencyList, webSocketsStats, theme, limit, sortType, sortOrder, filteredData, onLimitToggle, onThemeToggle, isLightTheme, onSort } =\n    useProps(LIMIT);\n\n  useBodyClass(theme);\n\n  return (\n    <PageExchangeQuotesLayout\n      loading={loadingCurrencyList}\n      themeToggle={\n        <ToggleLink\n          showPrimary={isLightTheme}\n          primaryText=\"Dark theme\"\n          secondText=\"Light theme\"\n          onToggle={onThemeToggle}\n        />\n      }\n      webSocketsStats={<i>Websocket events per second (average): {webSocketsStats}</i>}\n      showAllToggle={\n        <ToggleLink\n          showPrimary={!!limit}\n          onToggle={onLimitToggle}\n          primaryText=\"Show All\"\n          secondText={`Show top ${LIMIT}`}\n        />\n      }\n      table={<Table data={filteredData} sortOrder={sortOrder} sortType={sortType} onSort={onSort} />}\n    />\n  );\n}\n\nexport default React.memo(PageExchangeQuotes);\n","import React from 'react';\nimport PageExchangeQuotes from './pages/PageExchangeQuotes/PageExchangeQuotes';\n\nfunction App() {\n  return (\n    <>\n      <PageExchangeQuotes />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}